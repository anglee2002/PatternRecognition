%----------------------- 本程序为第三章最大似然估计和贝叶斯估计的示例代码 -----------------------%
close all;
clear all;
clc;

%----------------------- 第一部分：最大似然估计 -----------------------%
% 生成一百万个服从标准正态分布的随机数，用最大似然法估计这些随机数所服从正态分布的均值和标准差
data = randn(1e6, 1);
parameter = mle(data, 'distribution', 'norm');
u = parameter(1); % 均值0
dev = parameter(2); %标准差
fprintf('使用matlab自带mle求得的最大似然估计的均值为%f,标准差为%f\n', u, dev);

% 使用自己写的最大似然估计函数
% 对于一维简单数据，不使用mean和std函数，直接计算最大似然估计的均值和标准差
n = length(data);
u1 = sum(data) / n; % 均值的最大似然估计
dev1 = sqrt(sum((data - u1) .^ 2) / n); % 标准差的最大似然估计
fprintf('使用自己写的mle1求得的最大似然估计的均值为%f,标准差为%f\n', u, dev);

%----------------------- 第二部分：贝叶斯估计 -----------------------%
% 对一个单变量正态分布，已知其均值为u,方差为sigma，X为服从该分布的一个大小为30的样本集。
% 均值u自身也服从正态分布，p(u)=N(u0,sigma0), 其中u0=0.93,sigma0=0.05。
% 假设分布的总体方差sigma等于样本方差，试采用贝叶斯估计方法，根据例3.2和公式(3-30)估计其均值u。
X = [1.2, 1.1, 1.2, 1.0, 0.8, 1.0, 0.9, 1.1, 0.9, 1.1, 0.7, 1.1, 0.7, 0.8, 1.2, ...
         0.6, 0.9, 0.7, 1.1, 0.8, 0.7, 0.7, 0.7, 1.0, 0.8, 0.8, 0.9, 1.1, 1.0, 0.9];
N = length(X); % 样本集大小
u0 = 0.93; % 先验均值
sigma0 = 0.05; % 先验方差
mn = mean(X); % 样本均值
sigma = 1 / N * sum((X - repmat(mn, 1, N)) .^ 2); % 总体方差，也等于样本方差
u = N * sigma0 * mn / (N * sigma0 + sigma) + sigma * u0 / (N * sigma0 + sigma); % 均值u的贝叶斯估计
fprintf('贝叶斯估计的均值为%f\n', u);

% 将X中的数据减去0.2，再次估计均值u
X = X - 0.2;
mn = mean(X); % 样本均值
sigma = 1 / N * sum((X - repmat(mn, 1, N)) .^ 2); % 总体方差，也等于样本方差
u = N * sigma0 * mn / (N * sigma0 + sigma) + sigma * u0 / (N * sigma0 + sigma); % 均值u的贝叶斯估计
fprintf('贝叶斯估计的均值为%f\n', u);
